# *****************************************************************************
# * Copyright (C) 2009   this file is part of the NPTool Project              *
# *                                                                           *
# * For the licensing terms see $NPTOOL/Licence/NPTool_Licence                *
# * For the list of contributors see $NPTOOL/Licence/Contributors             *
# *****************************************************************************/

# *****************************************************************************
# * Original Author: N. de Sereville  contact address: deserevi@ipno.in2p3.fr *
# *                                                                           *
# * Creation Date  : January 2013                                             *
# * Last update    :                                                          *
# *---------------------------------------------------------------------------*
# * Decription: This script is in charge of preparing the installation of the *
# *             NPLib. It does several things:                                *
# *               + copy all header files to the include directory            *
# *               + compile the core libraries (all libraries which are not   *
# *                 related to a specific detector)                           *
# *               + generate the Makefile.detector makefile which is included *
# *                 in the main Makefile. The Makefile.detector has one entry *
# *                 per declared detector.                                    *
# *                                                                           *
# *             This scripts accepts as arguments detector names. The name    *
# *             should be a lower case version of the directory name associated *
# *             to the detector.                                              *
# *             If no argument is given, then all detectors are considered.   *
# *                                                                           *
# *---------------------------------------------------------------------------*
# * Comment:                                                                  *
# *                                                                           *
# *                                                                           *
# *****************************************************************************

#! /bin/bash


# arguments list
args="$@"

############################################################
# First of all, define .core_libs and .detector_libs files #
############################################################
corelibs="initialconditions interactioncoordinates ioroot physics tools vdetector"

# core libraries list
core_file=".core_libs"
# if file exists delete it
if [ -e $core_file ] ; then
   rm $core_file
fi ;

# detector libraries list
detector_file=".detector_libs"
# if file exists delete it
if [ -e $detector_file ] ; then
   rm $detector_file
fi ;

# fill files
core_string=""
detector_string=""
for file in */Makefile
do
   # remove "Makefile" string from file name
   name=${file%\/*}
   # file name in lower case
   lname=$(echo "$name"  | tr '[A-Z]' '[a-z]')
   # only build core libraries
   if echo "$corelibs" | grep -q "$lname" ; then
      core_string="$core_string""$lname "
   else 
      if [ $# = 0 ] ; then 
         detector_string="$detector_string""$lname "
      else
         # only add Makefile.detector target if it is in the
         # arguments list
         if echo "$args" | grep -q "$lname" ; then
            detector_string="$detector_string""$lname "
         fi ;
      fi ;
   fi ;
done

echo "$core_string" >> $core_file
echo "$detector_string" >> $detector_file


###########################################################################
# Create detector entry in Makefile file for detectors given in arguments #
###########################################################################
# output file
outfile="Makefile.detector"
echo " + Creating $outfile file....."

# if output file exists delete it
if [ -e $outfile ] ; then
   rm $outfile
fi ;

# create output file
echo "# WARNING:" >> $outfile
echo "#    This file is automatically generated by the configure script." >> $outfile
echo "#    If you modify this file by hand, changes won't persist the next time you run ./configure." >> $outfile
echo "#" >> $outfile

# loop recursively on sub-directories containing a Makefile file
for file in */Makefile
do
   # remove "Makefile" string from file name
   name=${file%\/*}
   # file name in lower case
   lname=$(echo "$name"  | tr '[A-Z]' '[a-z]')
   # if no arguments are given, add all detectors in Makefile.detector
   # by default
   if [ $# = 0 ] ; then 
      # build target
      echo "$lname": >> $outfile
      # build commands
      ./scripts/makefile_detector.sh $name $outfile
   else
      # only add Makefile.detector target if it is in the
      # arguments list
      if echo "$args" | grep -q "$lname" ; then
         # build target
         echo "$lname": >> $outfile
         # build commands
         ./scripts/makefile_detector.sh $name $outfile
      fi ;
   fi ;
done


##########################################################################
# Create DetectorList.inc file in VDetector directory used for compiling #
# only the detectors given in arguments                                  #
##########################################################################
# output file
outfile="VDetector/DetectorList.inc"
echo " + Creating $outfile file....."

# if output file exists delete it
if [ -e $outfile ] ; then
   rm $outfile
fi ;

# create output file
echo "// WARNING:" >> $outfile
echo "//    This file is automatically generated by the configure script." >> $outfile
echo "//    If you modify this file by hand, changes won't persist the next time you run ./configure." >> $outfile
echo "//" >> $outfile

# loop recursively on sub-directories containing a Makefile file
for file in */Makefile
do
   # remove "Makefile" string from file name
   name=${file%\/*}
   # file name in lower/upper case
   lname=$(echo "$name"  | tr '[A-Z]' '[a-z]')
   uname=$(echo "$name"  | tr '[a-z]' '[A-Z]')
   # if no arguments are given, add all detectors in Makefile.detector
   # by default
   if [ $# = 0 ] ; then 
      # build target
      echo "#define $uname" >> $outfile
   else
      # only add Makefile.detector target if it is in the
      # arguments list
      if echo "$args" | grep -q "$lname" ; then
         # build target
         echo "#define $uname" >> $outfile
      fi ;
   fi ;
done



########################
# Build core libraries #
########################
# (I) fill include directory with associated headers
#echo " + Copying header files to the include directory....."
./scripts/fillincdir.sh

# (II) compile core libraries
echo " + Building core libraries....."
# loop recursively on sub-directories containing a Makefile file
for file in */Makefile
do
   # remove "Makefile" string from file name
   name=${file%\/*}
   # file name in lower case
   lname=$(echo "$name"  | tr '[A-Z]' '[a-z]')
   # only build core libraries
   if echo "$corelibs" | grep -q "$lname" ; then
      # print informations
      echo "\tEntering $name directory..."
      # add "-C ./" pattern at the beginning of the name
      cmd="-C ./$name"
      # execute make command with target specified on command line
      make --silent $cmd
   fi ;
done


