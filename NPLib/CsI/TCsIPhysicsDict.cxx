//
// File generated by rootcint at Tue Apr 14 23:26:57 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TCsIPhysicsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TCsIPhysicsDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TCsIPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TCsIPhysics(void *p = 0);
   static void *newArray_TCsIPhysics(Long_t size, void *p);
   static void delete_TCsIPhysics(void *p);
   static void deleteArray_TCsIPhysics(void *p);
   static void destruct_TCsIPhysics(void *p);
   static void streamer_TCsIPhysics(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TCsIPhysics*)
   {
      ::TCsIPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TCsIPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TCsIPhysics", ::TCsIPhysics::Class_Version(), "./TCsIPhysics.h", 38,
                  typeid(::TCsIPhysics), DefineBehavior(ptr, ptr),
                  &::TCsIPhysics::Dictionary, isa_proxy, 0,
                  sizeof(::TCsIPhysics) );
      instance.SetNew(&new_TCsIPhysics);
      instance.SetNewArray(&newArray_TCsIPhysics);
      instance.SetDelete(&delete_TCsIPhysics);
      instance.SetDeleteArray(&deleteArray_TCsIPhysics);
      instance.SetDestructor(&destruct_TCsIPhysics);
      instance.SetStreamerFunc(&streamer_TCsIPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TCsIPhysics*)
   {
      return GenerateInitInstanceLocal((::TCsIPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TCsIPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TCsIPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TCsIPhysics::Class_Name()
{
   return "TCsIPhysics";
}

//______________________________________________________________________________
const char *TCsIPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCsIPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TCsIPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TCsIPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TCsIPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCsIPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TCsIPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TCsIPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TCsIPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TCsIPhysics.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef NPA::VDetector baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  DetectorNumber;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TCsIPhysics::IsA());
   } else {
      R__c = R__b.WriteVersion(TCsIPhysics::IsA(), kTRUE);
      TObject::Streamer(R__b);
      //This works around a msvc bug and should be harmless on other platforms
      typedef NPA::VDetector baseClass0;
      baseClass0::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  DetectorNumber;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TCsIPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TCsIPhysics.
      TClass *R__cl = ::TCsIPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorNumber", (void*)&DetectorNumber);
      R__insp.InspectMember("vector<UShort_t>", (void*)&DetectorNumber, "DetectorNumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Energy", (void*)&Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&Energy, "Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Time", (void*)&Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&Time, "Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumberOfDetector", &NumberOfDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventData", &EventData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EventPhysics", &EventPhysics);
      TObject::ShowMembers(R__insp);
      //This works around a msvc bug and should be harmless on other platforms
      typedef NPA::VDetector baseClass2;
      baseClass2::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TCsIPhysics(void *p) {
      return  p ? new(p) ::TCsIPhysics : new ::TCsIPhysics;
   }
   static void *newArray_TCsIPhysics(Long_t nElements, void *p) {
      return p ? new(p) ::TCsIPhysics[nElements] : new ::TCsIPhysics[nElements];
   }
   // Wrapper around operator delete
   static void delete_TCsIPhysics(void *p) {
      delete ((::TCsIPhysics*)p);
   }
   static void deleteArray_TCsIPhysics(void *p) {
      delete [] ((::TCsIPhysics*)p);
   }
   static void destruct_TCsIPhysics(void *p) {
      typedef ::TCsIPhysics current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TCsIPhysics(TBuffer &buf, void *obj) {
      ((::TCsIPhysics*)obj)->::TCsIPhysics::Streamer(buf);
   }
} // end of namespace ROOT for class ::TCsIPhysics

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* TCsIPhysicsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTCsIPhysicsDict();

extern "C" void G__set_cpp_environmentTCsIPhysicsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TCsIPhysics.h");
  G__cpp_reset_tagtableTCsIPhysicsDict();
}
#include <new>
extern "C" int G__cpp_dllrevTCsIPhysicsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TCsIPhysics */
static int G__TCsIPhysicsDict_480_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCsIPhysics* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCsIPhysics[n];
     } else {
       p = new((void*) gvp) TCsIPhysics[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TCsIPhysics;
     } else {
       p = new((void*) gvp) TCsIPhysics;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCsIPhysics*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCsIPhysics*) G__getstructoffset())->BuildOnlinePhysicalEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCsIPhysics*) G__getstructoffset())->SetRawDataPointer((TCsIData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TCsIPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCsIPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TCsIPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TCsIPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TCsIPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCsIPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCsIPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TCsIPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TCsIPhysicsDict_480_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TCsIPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TCsIPhysicsDict_480_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TCsIPhysics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TCsIPhysics(*(TCsIPhysics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TCsIPhysics G__TTCsIPhysics;
static int G__TCsIPhysicsDict_480_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TCsIPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TCsIPhysics*) (soff+(sizeof(TCsIPhysics)*i)))->~G__TTCsIPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TCsIPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TCsIPhysics*) (soff))->~G__TTCsIPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TCsIPhysicsDict_480_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TCsIPhysics* dest = (TCsIPhysics*) G__getstructoffset();
   *dest = *(TCsIPhysics*) libp->para[0].ref;
   const TCsIPhysics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TCsIPhysics */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTCsIPhysicsDict {
 public:
  G__Sizep2memfuncTCsIPhysicsDict(): p(&G__Sizep2memfuncTCsIPhysicsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTCsIPhysicsDict::*p)();
};

size_t G__get_sizep2memfuncTCsIPhysicsDict()
{
  G__Sizep2memfuncTCsIPhysicsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTCsIPhysicsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics))) {
     TCsIPhysics *G__Lderived;
     G__Lderived=(TCsIPhysics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics),G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       NPA::VDetector *G__Lpbase=(NPA::VDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics),G__get_linked_tagnum(&G__TCsIPhysicsDictLN_NPAcLcLVDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTCsIPhysicsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<string>,TH1*>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<string,allocator<string> >,TH1*>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<vector<string,allocator<string> >,TH1*,less<vector<string,allocator<string> > > >",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double> >",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TCsIPhysics */
static void G__setup_memvarTCsIPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics));
   { TCsIPhysics *p; p=(TCsIPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->DetectorNumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,1,"DetectorNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Energy)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"Energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Time)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,1,"Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"NumberOfDetector=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIData),-1,-1,4,"EventData=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics),-1,-1,4,"EventPhysics=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTCsIPhysicsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTCsIPhysics(void) {
   /* TCsIPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics));
   G__memfunc_setup("TCsIPhysics",1078,G__TCsIPhysicsDict_480_0_1, 105, G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TCsIPhysicsDict_480_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadConfiguration",1748,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddParameterToCalibrationManager",3216,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootInputRaw",2288,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootInputPhysics",2729,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootOutput",2119,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildPhysicalEvent",1839,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildSimplePhysicalEvent",2457,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildOnlinePhysicalEvent",2452,G__TCsIPhysicsDict_480_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawDataPointer",1713,G__TCsIPhysicsDict_480_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCsIData' - 0 - rawDataPointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEventPhysics",1740,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearEventData",1379,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TCsIPhysicsDict_480_0_15, 85, G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TCsIPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TCsIPhysicsDict_480_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCsIPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TCsIPhysicsDict_480_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TCsIPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TCsIPhysicsDict_480_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TCsIPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TCsIPhysicsDict_480_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TCsIPhysicsDict_480_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCsIPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TCsIPhysicsDict_480_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCsIPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TCsIPhysicsDict_480_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TCsIPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TCsIPhysicsDict_480_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TCsIPhysics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TCsIPhysics", 1078, G__TCsIPhysicsDict_480_0_27, (int) ('i'), G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics), -1, 0, 1, 1, 1, 0, "u 'TCsIPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TCsIPhysics", 1204, G__TCsIPhysicsDict_480_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TCsIPhysicsDict_480_0_29, (int) ('u'), G__get_linked_tagnum(&G__TCsIPhysicsDictLN_TCsIPhysics), -1, 1, 1, 1, 1, 0, "u 'TCsIPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTCsIPhysicsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTCsIPhysicsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTCsIPhysicsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TCsIPhysicsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TCsIData = { "TCsIData" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_NPA = { "NPA" , 110 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_NPAcLcLVDetector = { "NPA::VDetector" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR = { "map<vector<string,allocator<string> >,TH1*,less<vector<string,allocator<string> > >,allocator<pair<const vector<string,allocator<string> >,TH1*> > >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__TCsIPhysicsDictLN_TCsIPhysics = { "TCsIPhysics" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTCsIPhysicsDict() {
  G__TCsIPhysicsDictLN_TClass.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TBuffer.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TMemberInspector.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TObject.tagnum = -1 ;
  G__TCsIPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_string.tagnum = -1 ;
  G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TCsIData.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_NPA.tagnum = -1 ;
  G__TCsIPhysicsDictLN_NPAcLcLVDetector.tagnum = -1 ;
  G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TCsIPhysicsDictLN_TCsIPhysics.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTCsIPhysicsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_string);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TCsIData);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_NPA);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_NPAcLcLVDetector);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_maplEvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUcOlesslEvectorlEstringcOallocatorlEstringgRsPgRsPgRcOallocatorlEpairlEconstsPvectorlEstringcOallocatorlEstringgRsPgRcOTH1mUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TCsIPhysicsDictLN_TCsIPhysics),sizeof(TCsIPhysics),-1,29952,"CsIPhysics structure",G__setup_memvarTCsIPhysics,G__setup_memfuncTCsIPhysics);
}
extern "C" void G__cpp_setupTCsIPhysicsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTCsIPhysicsDict()");
  G__set_cpp_environmentTCsIPhysicsDict();
  G__cpp_setup_tagtableTCsIPhysicsDict();

  G__cpp_setup_inheritanceTCsIPhysicsDict();

  G__cpp_setup_typetableTCsIPhysicsDict();

  G__cpp_setup_memvarTCsIPhysicsDict();

  G__cpp_setup_memfuncTCsIPhysicsDict();
  G__cpp_setup_globalTCsIPhysicsDict();
  G__cpp_setup_funcTCsIPhysicsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTCsIPhysicsDict();
  return;
}
class G__cpp_setup_initTCsIPhysicsDict {
  public:
    G__cpp_setup_initTCsIPhysicsDict() { G__add_setup_func("TCsIPhysicsDict",(G__incsetup)(&G__cpp_setupTCsIPhysicsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTCsIPhysicsDict() { G__remove_setup_func("TCsIPhysicsDict"); }
};
G__cpp_setup_initTCsIPhysicsDict G__cpp_setup_initializerTCsIPhysicsDict;

