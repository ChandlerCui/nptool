//
// File generated by rootcint at Mon Dec 10 15:39:44 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TTigEventFragmentDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TTigEventFragmentDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TTigEventFragment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TTigEventFragment(void *p = 0);
   static void *newArray_TTigEventFragment(Long_t size, void *p);
   static void delete_TTigEventFragment(void *p);
   static void deleteArray_TTigEventFragment(void *p);
   static void destruct_TTigEventFragment(void *p);
   static void streamer_TTigEventFragment(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TTigEventFragment*)
   {
      ::TTigEventFragment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TTigEventFragment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TTigEventFragment", ::TTigEventFragment::Class_Version(), "./TTigEventFragment.h", 10,
                  typeid(::TTigEventFragment), DefineBehavior(ptr, ptr),
                  &::TTigEventFragment::Dictionary, isa_proxy, 0,
                  sizeof(::TTigEventFragment) );
      instance.SetNew(&new_TTigEventFragment);
      instance.SetNewArray(&newArray_TTigEventFragment);
      instance.SetDelete(&delete_TTigEventFragment);
      instance.SetDeleteArray(&deleteArray_TTigEventFragment);
      instance.SetDestructor(&destruct_TTigEventFragment);
      instance.SetStreamerFunc(&streamer_TTigEventFragment);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TTigEventFragment*)
   {
      return GenerateInitInstanceLocal((::TTigEventFragment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TTigEventFragment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TTigEventFragment::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TTigEventFragment::Class_Name()
{
   return "TTigEventFragment";
}

//______________________________________________________________________________
const char *TTigEventFragment::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTigEventFragment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TTigEventFragment::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TTigEventFragment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TTigEventFragment::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTigEventFragment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TTigEventFragment::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TTigEventFragment*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TTigEventFragment::Streamer(TBuffer &R__b)
{
   // Stream an object of class TTigEventFragment.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> tig_num_chan;
      R__b >> tig_event_id;
      {
         vector<int> &R__stl =  tig_midas_id;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  tig_type;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  channel_number;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  channel_raw;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  cfd_value;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  led_value;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  charge_raw;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<float> &R__stl =  charge_cal;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            float R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  timestamp_low;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  timestamp_high;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  timestamp_live;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  timestamp_tr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  timestamp_ta;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<TH1F> &R__stl =  waveform;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            TH1F R__t;
            R__t.Streamer(R__b);
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TTigEventFragment::IsA());
   } else {
      R__c = R__b.WriteVersion(TTigEventFragment::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << tig_num_chan;
      R__b << tig_event_id;
      {
         vector<int> &R__stl =  tig_midas_id;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  tig_type;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  channel_number;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  channel_raw;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  cfd_value;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  led_value;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  charge_raw;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<float> &R__stl =  charge_cal;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<float>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  timestamp_low;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  timestamp_high;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  timestamp_live;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  timestamp_tr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  timestamp_ta;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<TH1F> &R__stl =  waveform;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<TH1F>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TH1F&)(*R__k)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TTigEventFragment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TTigEventFragment.
      TClass *R__cl = ::TTigEventFragment::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tig_num_chan", &tig_num_chan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tig_event_id", &tig_event_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tig_midas_id", (void*)&tig_midas_id);
      R__insp.InspectMember("vector<int>", (void*)&tig_midas_id, "tig_midas_id.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tig_type", (void*)&tig_type);
      R__insp.InspectMember("vector<int>", (void*)&tig_type, "tig_type.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_number", (void*)&channel_number);
      R__insp.InspectMember("vector<int>", (void*)&channel_number, "channel_number.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "channel_raw", (void*)&channel_raw);
      R__insp.InspectMember("vector<int>", (void*)&channel_raw, "channel_raw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cfd_value", (void*)&cfd_value);
      R__insp.InspectMember("vector<int>", (void*)&cfd_value, "cfd_value.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "led_value", (void*)&led_value);
      R__insp.InspectMember("vector<int>", (void*)&led_value, "led_value.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge_raw", (void*)&charge_raw);
      R__insp.InspectMember("vector<int>", (void*)&charge_raw, "charge_raw.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "charge_cal", (void*)&charge_cal);
      R__insp.InspectMember("vector<float>", (void*)&charge_cal, "charge_cal.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp_low", (void*)&timestamp_low);
      R__insp.InspectMember("vector<int>", (void*)&timestamp_low, "timestamp_low.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp_high", (void*)&timestamp_high);
      R__insp.InspectMember("vector<int>", (void*)&timestamp_high, "timestamp_high.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp_live", (void*)&timestamp_live);
      R__insp.InspectMember("vector<int>", (void*)&timestamp_live, "timestamp_live.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp_tr", (void*)&timestamp_tr);
      R__insp.InspectMember("vector<int>", (void*)&timestamp_tr, "timestamp_tr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timestamp_ta", (void*)&timestamp_ta);
      R__insp.InspectMember("vector<int>", (void*)&timestamp_ta, "timestamp_ta.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "waveform", (void*)&waveform);
      R__insp.InspectMember("vector<TH1F>", (void*)&waveform, "waveform.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TTigEventFragment(void *p) {
      return  p ? new(p) ::TTigEventFragment : new ::TTigEventFragment;
   }
   static void *newArray_TTigEventFragment(Long_t nElements, void *p) {
      return p ? new(p) ::TTigEventFragment[nElements] : new ::TTigEventFragment[nElements];
   }
   // Wrapper around operator delete
   static void delete_TTigEventFragment(void *p) {
      delete ((::TTigEventFragment*)p);
   }
   static void deleteArray_TTigEventFragment(void *p) {
      delete [] ((::TTigEventFragment*)p);
   }
   static void destruct_TTigEventFragment(void *p) {
      typedef ::TTigEventFragment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TTigEventFragment(TBuffer &buf, void *obj) {
      ((::TTigEventFragment*)obj)->::TTigEventFragment::Streamer(buf);
   }
} // end of namespace ROOT for class ::TTigEventFragment

namespace ROOT {
   void vectorlETH1FgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETH1FgR_Dictionary();
   static void *new_vectorlETH1FgR(void *p = 0);
   static void *newArray_vectorlETH1FgR(Long_t size, void *p);
   static void delete_vectorlETH1FgR(void *p);
   static void deleteArray_vectorlETH1FgR(void *p);
   static void destruct_vectorlETH1FgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TH1F>*)
   {
      vector<TH1F> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TH1F>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TH1F>", -2, "prec_stl/vector", 49,
                  typeid(vector<TH1F>), DefineBehavior(ptr, ptr),
                  0, &vectorlETH1FgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TH1F>) );
      instance.SetNew(&new_vectorlETH1FgR);
      instance.SetNewArray(&newArray_vectorlETH1FgR);
      instance.SetDelete(&delete_vectorlETH1FgR);
      instance.SetDeleteArray(&deleteArray_vectorlETH1FgR);
      instance.SetDestructor(&destruct_vectorlETH1FgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TH1F> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TH1F>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETH1FgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TH1F>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETH1FgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1F> : new vector<TH1F>;
   }
   static void *newArray_vectorlETH1FgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TH1F>[nElements] : new vector<TH1F>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETH1FgR(void *p) {
      delete ((vector<TH1F>*)p);
   }
   static void deleteArray_vectorlETH1FgR(void *p) {
      delete [] ((vector<TH1F>*)p);
   }
   static void destruct_vectorlETH1FgR(void *p) {
      typedef vector<TH1F> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TH1F>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* TTigEventFragmentDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTTigEventFragmentDict();

extern "C" void G__set_cpp_environmentTTigEventFragmentDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TTigEventFragment.h");
  G__cpp_reset_tagtableTTigEventFragmentDict();
}
#include <new>
extern "C" int G__cpp_dllrevTTigEventFragmentDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TTigEventFragment */
static int G__TTigEventFragmentDict_207_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTigEventFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTigEventFragment[n];
     } else {
       p = new((void*) gvp) TTigEventFragment[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TTigEventFragment;
     } else {
       p = new((void*) gvp) TTigEventFragment;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTigEventFragment* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TTigEventFragment((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TTigEventFragment((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTigEventFragment*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TTigEventFragment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTigEventFragment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TTigEventFragment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TTigEventFragment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TTigEventFragment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTigEventFragment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTigEventFragment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TTigEventFragment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TTigEventFragmentDict_207_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TTigEventFragment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TTigEventFragmentDict_207_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TTigEventFragment* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TTigEventFragment(*(TTigEventFragment*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TTigEventFragment G__TTTigEventFragment;
static int G__TTigEventFragmentDict_207_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TTigEventFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TTigEventFragment*) (soff+(sizeof(TTigEventFragment)*i)))->~G__TTTigEventFragment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TTigEventFragment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TTigEventFragment*) (soff))->~G__TTTigEventFragment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TTigEventFragmentDict_207_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TTigEventFragment* dest = (TTigEventFragment*) G__getstructoffset();
   *dest = *(TTigEventFragment*) libp->para[0].ref;
   const TTigEventFragment& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TTigEventFragment */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTTigEventFragmentDict {
 public:
  G__Sizep2memfuncTTigEventFragmentDict(): p(&G__Sizep2memfuncTTigEventFragmentDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTTigEventFragmentDict::*p)();
};

size_t G__get_sizep2memfuncTTigEventFragmentDict()
{
  G__Sizep2memfuncTTigEventFragmentDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTTigEventFragmentDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment))) {
     TTigEventFragment *G__Lderived;
     G__Lderived=(TTigEventFragment*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment),G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTTigEventFragmentDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1F>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TTigEventFragment */
static void G__setup_memvarTTigEventFragment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment));
   { TTigEventFragment *p; p=(TTigEventFragment*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->tig_num_chan)-(long)(p)),105,0,0,-1,-1,-1,1,"tig_num_chan=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tig_event_id)-(long)(p)),105,0,0,-1,-1,-1,1,"tig_event_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tig_midas_id)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"tig_midas_id=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tig_type)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"tig_type=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channel_number)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"channel_number=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->channel_raw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"channel_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->cfd_value)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"cfd_value=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->led_value)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"led_value=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge_raw)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"charge_raw=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->charge_cal)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,1,"charge_cal=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp_low)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"timestamp_low=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp_high)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"timestamp_high=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp_live)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"timestamp_live=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->timestamp_tr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"timestamp_tr=",0,"triggers requested");
   G__memvar_setup((void*)((long)(&p->timestamp_ta)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"timestamp_ta=",0,"triggers accepted");
   G__memvar_setup((void*)((long)(&p->waveform)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR),G__defined_typename("vector<TH1F>"),-1,1,"waveform=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTTigEventFragmentDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTTigEventFragment(void) {
   /* TTigEventFragment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment));
   G__memfunc_setup("TTigEventFragment",1710,G__TTigEventFragmentDict_207_0_1, 105, G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TTigEventFragment",1710,G__TTigEventFragmentDict_207_0_2, 105, G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment), -1, 0, 1, 1, 1, 0, "i - - 0 - MaxChannel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TTigEventFragmentDict_207_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TTigEventFragmentDict_207_0_6, 85, G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TTigEventFragment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TTigEventFragmentDict_207_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTigEventFragment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TTigEventFragmentDict_207_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TTigEventFragment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TTigEventFragmentDict_207_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TTigEventFragment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TTigEventFragmentDict_207_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TTigEventFragmentDict_207_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTigEventFragment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TTigEventFragmentDict_207_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTigEventFragment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TTigEventFragmentDict_207_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TTigEventFragment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TTigEventFragmentDict_207_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TTigEventFragment::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TTigEventFragment", 1710, G__TTigEventFragmentDict_207_0_18, (int) ('i'), G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment), -1, 0, 1, 1, 1, 0, "u 'TTigEventFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TTigEventFragment", 1836, G__TTigEventFragmentDict_207_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TTigEventFragmentDict_207_0_20, (int) ('u'), G__get_linked_tagnum(&G__TTigEventFragmentDictLN_TTigEventFragment), -1, 1, 1, 1, 1, 0, "u 'TTigEventFragment' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTTigEventFragmentDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTTigEventFragmentDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTTigEventFragmentDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TTigEventFragmentDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_TTigEventFragment = { "TTigEventFragment" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR = { "vector<TH1F,allocator<TH1F> >" , 99 , -1 };
G__linked_taginfo G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1F,allocator<TH1F> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTTigEventFragmentDict() {
  G__TTigEventFragmentDictLN_TClass.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TBuffer.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TMemberInspector.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TObject.tagnum = -1 ;
  G__TTigEventFragmentDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_TTigEventFragment.tagnum = -1 ;
  G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR.tagnum = -1 ;
  G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTTigEventFragmentDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TVectorTlEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_TTigEventFragment),sizeof(TTigEventFragment),-1,62720,"TTigEventFragment structure",G__setup_memvarTTigEventFragment,G__setup_memfuncTTigEventFragment);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR);
   G__get_linked_tagnum_fwd(&G__TTigEventFragmentDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTTigEventFragmentDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTTigEventFragmentDict()");
  G__set_cpp_environmentTTigEventFragmentDict();
  G__cpp_setup_tagtableTTigEventFragmentDict();

  G__cpp_setup_inheritanceTTigEventFragmentDict();

  G__cpp_setup_typetableTTigEventFragmentDict();

  G__cpp_setup_memvarTTigEventFragmentDict();

  G__cpp_setup_memfuncTTigEventFragmentDict();
  G__cpp_setup_globalTTigEventFragmentDict();
  G__cpp_setup_funcTTigEventFragmentDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTTigEventFragmentDict();
  return;
}
class G__cpp_setup_initTTigEventFragmentDict {
  public:
    G__cpp_setup_initTTigEventFragmentDict() { G__add_setup_func("TTigEventFragmentDict",(G__incsetup)(&G__cpp_setupTTigEventFragmentDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTTigEventFragmentDict() { G__remove_setup_func("TTigEventFragmentDict"); }
};
G__cpp_setup_initTTigEventFragmentDict G__cpp_setup_initializerTTigEventFragmentDict;

