//
// File generated by rootcint at Thu Jan 29 15:35:18 2015

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME THiraDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "THiraDataDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void THiraData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_THiraData(void *p = 0);
   static void *newArray_THiraData(Long_t size, void *p);
   static void delete_THiraData(void *p);
   static void deleteArray_THiraData(void *p);
   static void destruct_THiraData(void *p);
   static void streamer_THiraData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::THiraData*)
   {
      ::THiraData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::THiraData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("THiraData", ::THiraData::Class_Version(), "./THiraData.h", 28,
                  typeid(::THiraData), DefineBehavior(ptr, ptr),
                  &::THiraData::Dictionary, isa_proxy, 0,
                  sizeof(::THiraData) );
      instance.SetNew(&new_THiraData);
      instance.SetNewArray(&newArray_THiraData);
      instance.SetDelete(&delete_THiraData);
      instance.SetDeleteArray(&deleteArray_THiraData);
      instance.SetDestructor(&destruct_THiraData);
      instance.SetStreamerFunc(&streamer_THiraData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::THiraData*)
   {
      return GenerateInitInstanceLocal((::THiraData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::THiraData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *THiraData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *THiraData::Class_Name()
{
   return "THiraData";
}

//______________________________________________________________________________
const char *THiraData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THiraData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int THiraData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::THiraData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void THiraData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THiraData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *THiraData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::THiraData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void THiraData::Streamer(TBuffer &R__b)
{
   // Stream an object of class THiraData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripE_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripE_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThinSi_StripE_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripT_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripT_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThinSi_StripT_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXE_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXE_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripXE_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXT_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXT_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripXT_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYE_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYE_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripYE_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYT_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYT_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripYT_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIE_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIE_CristalNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_CsIE_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIT_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIT_CristalNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_CsIT_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, THiraData::IsA());
   } else {
      R__c = R__b.WriteVersion(THiraData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripE_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripE_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThinSi_StripE_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripT_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThinSi_StripT_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThinSi_StripT_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXE_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXE_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripXE_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXT_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripXT_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripXT_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYE_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYE_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripYE_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYT_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_ThickSi_StripYT_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_ThickSi_StripYT_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIE_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIE_CristalNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_CsIE_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIT_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fHiRA_CsIT_CristalNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fHiRA_CsIT_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void THiraData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class THiraData.
      TClass *R__cl = ::THiraData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripE_DetectorNbr", (void*)&fHiRA_ThinSi_StripE_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThinSi_StripE_DetectorNbr, "fHiRA_ThinSi_StripE_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripE_StripNbr", (void*)&fHiRA_ThinSi_StripE_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThinSi_StripE_StripNbr, "fHiRA_ThinSi_StripE_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripE_Energy", (void*)&fHiRA_ThinSi_StripE_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThinSi_StripE_Energy, "fHiRA_ThinSi_StripE_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripT_DetectorNbr", (void*)&fHiRA_ThinSi_StripT_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThinSi_StripT_DetectorNbr, "fHiRA_ThinSi_StripT_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripT_StripNbr", (void*)&fHiRA_ThinSi_StripT_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThinSi_StripT_StripNbr, "fHiRA_ThinSi_StripT_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThinSi_StripT_Time", (void*)&fHiRA_ThinSi_StripT_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThinSi_StripT_Time, "fHiRA_ThinSi_StripT_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXE_DetectorNbr", (void*)&fHiRA_ThickSi_StripXE_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripXE_DetectorNbr, "fHiRA_ThickSi_StripXE_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXE_StripNbr", (void*)&fHiRA_ThickSi_StripXE_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripXE_StripNbr, "fHiRA_ThickSi_StripXE_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXE_Energy", (void*)&fHiRA_ThickSi_StripXE_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThickSi_StripXE_Energy, "fHiRA_ThickSi_StripXE_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXT_DetectorNbr", (void*)&fHiRA_ThickSi_StripXT_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripXT_DetectorNbr, "fHiRA_ThickSi_StripXT_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXT_StripNbr", (void*)&fHiRA_ThickSi_StripXT_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripXT_StripNbr, "fHiRA_ThickSi_StripXT_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripXT_Time", (void*)&fHiRA_ThickSi_StripXT_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThickSi_StripXT_Time, "fHiRA_ThickSi_StripXT_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYE_DetectorNbr", (void*)&fHiRA_ThickSi_StripYE_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripYE_DetectorNbr, "fHiRA_ThickSi_StripYE_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYE_StripNbr", (void*)&fHiRA_ThickSi_StripYE_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripYE_StripNbr, "fHiRA_ThickSi_StripYE_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYE_Energy", (void*)&fHiRA_ThickSi_StripYE_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThickSi_StripYE_Energy, "fHiRA_ThickSi_StripYE_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYT_DetectorNbr", (void*)&fHiRA_ThickSi_StripYT_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripYT_DetectorNbr, "fHiRA_ThickSi_StripYT_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYT_StripNbr", (void*)&fHiRA_ThickSi_StripYT_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_ThickSi_StripYT_StripNbr, "fHiRA_ThickSi_StripYT_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_ThickSi_StripYT_Time", (void*)&fHiRA_ThickSi_StripYT_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_ThickSi_StripYT_Time, "fHiRA_ThickSi_StripYT_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIE_DetectorNbr", (void*)&fHiRA_CsIE_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_CsIE_DetectorNbr, "fHiRA_CsIE_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIE_CristalNbr", (void*)&fHiRA_CsIE_CristalNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_CsIE_CristalNbr, "fHiRA_CsIE_CristalNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIE_Energy", (void*)&fHiRA_CsIE_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_CsIE_Energy, "fHiRA_CsIE_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIT_DetectorNbr", (void*)&fHiRA_CsIT_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_CsIT_DetectorNbr, "fHiRA_CsIT_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIT_CristalNbr", (void*)&fHiRA_CsIT_CristalNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fHiRA_CsIT_CristalNbr, "fHiRA_CsIT_CristalNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHiRA_CsIT_Time", (void*)&fHiRA_CsIT_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fHiRA_CsIT_Time, "fHiRA_CsIT_Time.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_THiraData(void *p) {
      return  p ? new(p) ::THiraData : new ::THiraData;
   }
   static void *newArray_THiraData(Long_t nElements, void *p) {
      return p ? new(p) ::THiraData[nElements] : new ::THiraData[nElements];
   }
   // Wrapper around operator delete
   static void delete_THiraData(void *p) {
      delete ((::THiraData*)p);
   }
   static void deleteArray_THiraData(void *p) {
      delete [] ((::THiraData*)p);
   }
   static void destruct_THiraData(void *p) {
      typedef ::THiraData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_THiraData(TBuffer &buf, void *obj) {
      ((::THiraData*)obj)->::THiraData::Streamer(buf);
   }
} // end of namespace ROOT for class ::THiraData

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* THiraDataDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTHiraDataDict();

extern "C" void G__set_cpp_environmentTHiraDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("THiraData.h");
  G__cpp_reset_tagtableTHiraDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevTHiraDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* THiraData */
static int G__THiraDataDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THiraData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THiraData[n];
     } else {
       p = new((void*) gvp) THiraData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new THiraData;
     } else {
       p = new((void*) gvp) THiraData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__THiraDataDictLN_THiraData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripEDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripEStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripEEnergy((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripTDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripTStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThinSiStripTTime((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXEDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXEStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXEEnergy((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXTDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXTStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripXTTime((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYEDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYEStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYEEnergy((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYTDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYTStripNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraThickSiStripYTTime((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsIEDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsIECristalNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsIEEnergy((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsITDetectorNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsITCristalNbr((const UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->SetHiraCsITTime((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXEMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXEDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXEStripNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraStripXEEnergy((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXTMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXTDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripXTStripNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraStripXTTime((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYEMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYEDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYEStripNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraStripYEEnergy((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYTMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYTDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraStripYTStripNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraStripYTTime((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsIEMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsIEDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsIECristalNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraCsIEEnergy((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsITMult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsITDetectorNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const THiraData*) G__getstructoffset())->GetHiraCsITCristalNbr((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const THiraData*) G__getstructoffset())->GetHiraCsITTime((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) THiraData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THiraData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) THiraData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      THiraData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((THiraData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THiraData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THiraData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) THiraData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__THiraDataDict_168_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) THiraData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__THiraDataDict_168_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   THiraData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new THiraData(*(THiraData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__THiraDataDictLN_THiraData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef THiraData G__TTHiraData;
static int G__THiraDataDict_168_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (THiraData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((THiraData*) (soff+(sizeof(THiraData)*i)))->~G__TTHiraData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (THiraData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((THiraData*) (soff))->~G__TTHiraData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__THiraDataDict_168_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   THiraData* dest = (THiraData*) G__getstructoffset();
   *dest = *(THiraData*) libp->para[0].ref;
   const THiraData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* THiraData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTHiraDataDict {
 public:
  G__Sizep2memfuncTHiraDataDict(): p(&G__Sizep2memfuncTHiraDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTHiraDataDict::*p)();
};

size_t G__get_sizep2memfuncTHiraDataDict()
{
  G__Sizep2memfuncTHiraDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTHiraDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__THiraDataDictLN_THiraData))) {
     THiraData *G__Lderived;
     G__Lderived=(THiraData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__THiraDataDictLN_THiraData),G__get_linked_tagnum(&G__THiraDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTHiraDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__THiraDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__THiraDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__THiraDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__THiraDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* THiraData */
static void G__setup_memvarTHiraData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__THiraDataDictLN_THiraData));
   { THiraData *p; p=(THiraData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThinSi_StripE_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThinSi_StripE_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThinSi_StripE_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThinSi_StripT_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThinSi_StripT_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThinSi_StripT_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripXE_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripXE_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThickSi_StripXE_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripXT_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripXT_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThickSi_StripXT_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripYE_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripYE_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThickSi_StripYE_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripYT_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_ThickSi_StripYT_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_ThickSi_StripYT_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_CsIE_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_CsIE_CristalNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_CsIE_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_CsIT_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fHiRA_CsIT_CristalNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fHiRA_CsIT_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__THiraDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTHiraDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTHiraData(void) {
   /* THiraData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__THiraDataDictLN_THiraData));
   G__memfunc_setup("THiraData",850,G__THiraDataDict_168_0_1, 105, G__get_linked_tagnum(&G__THiraDataDictLN_THiraData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__THiraDataDict_168_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetHiraThinSiStripEDetectorNbr",2994,G__THiraDataDict_168_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThinSiStripEStripNbr",2698,G__THiraDataDict_168_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThinSiStripEEnergy",2496,G__THiraDataDict_168_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThinSiStripTDetectorNbr",3009,G__THiraDataDict_168_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThinSiStripTStripNbr",2713,G__THiraDataDict_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThinSiStripTTime",2292,G__THiraDataDict_168_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXEDetectorNbr",3178,G__THiraDataDict_168_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXEStripNbr",2882,G__THiraDataDict_168_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXEEnergy",2680,G__THiraDataDict_168_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXTDetectorNbr",3193,G__THiraDataDict_168_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXTStripNbr",2897,G__THiraDataDict_168_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripXTTime",2476,G__THiraDataDict_168_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYEDetectorNbr",3179,G__THiraDataDict_168_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYEStripNbr",2883,G__THiraDataDict_168_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYEEnergy",2681,G__THiraDataDict_168_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYTDetectorNbr",3194,G__THiraDataDict_168_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYTStripNbr",2898,G__THiraDataDict_168_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraThickSiStripYTTime",2477,G__THiraDataDict_168_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsIEDetectorNbr",2128,G__THiraDataDict_168_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsIECristalNbr",2024,G__THiraDataDict_168_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - CristalNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsIEEnergy",1630,G__THiraDataDict_168_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsITDetectorNbr",2143,G__THiraDataDict_168_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsITCristalNbr",2039,G__THiraDataDict_168_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 10 - CristalNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHiraCsITTime",1426,G__THiraDataDict_168_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXEMult",1781,G__THiraDataDict_168_0_29, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXEDetectorNbr",2479,G__THiraDataDict_168_0_30, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXEStripNbr",2183,G__THiraDataDict_168_0_31, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXEEnergy",1981,G__THiraDataDict_168_0_32, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXTMult",1796,G__THiraDataDict_168_0_33, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXTDetectorNbr",2494,G__THiraDataDict_168_0_34, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXTStripNbr",2198,G__THiraDataDict_168_0_35, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripXTTime",1777,G__THiraDataDict_168_0_36, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYEMult",1782,G__THiraDataDict_168_0_37, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYEDetectorNbr",2480,G__THiraDataDict_168_0_38, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYEStripNbr",2184,G__THiraDataDict_168_0_39, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYEEnergy",1982,G__THiraDataDict_168_0_40, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYTMult",1797,G__THiraDataDict_168_0_41, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYTDetectorNbr",2495,G__THiraDataDict_168_0_42, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYTStripNbr",2199,G__THiraDataDict_168_0_43, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraStripYTTime",1778,G__THiraDataDict_168_0_44, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsIEMult",1418,G__THiraDataDict_168_0_45, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsIEDetectorNbr",2116,G__THiraDataDict_168_0_46, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsIECristalNbr",2012,G__THiraDataDict_168_0_47, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsIEEnergy",1618,G__THiraDataDict_168_0_48, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsITMult",1433,G__THiraDataDict_168_0_49, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsITDetectorNbr",2131,G__THiraDataDict_168_0_50, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsITCristalNbr",2027,G__THiraDataDict_168_0_51, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHiraCsITTime",1414,G__THiraDataDict_168_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__THiraDataDict_168_0_53, 85, G__get_linked_tagnum(&G__THiraDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&THiraData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__THiraDataDict_168_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THiraData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__THiraDataDict_168_0_55, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&THiraData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__THiraDataDict_168_0_56, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&THiraData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__THiraDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__THiraDataDict_168_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__THiraDataDict_168_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THiraData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__THiraDataDict_168_0_62, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THiraData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__THiraDataDict_168_0_63, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&THiraData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__THiraDataDict_168_0_64, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&THiraData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("THiraData", 850, G__THiraDataDict_168_0_65, (int) ('i'), G__get_linked_tagnum(&G__THiraDataDictLN_THiraData), -1, 0, 1, 1, 1, 0, "u 'THiraData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~THiraData", 976, G__THiraDataDict_168_0_66, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__THiraDataDict_168_0_67, (int) ('u'), G__get_linked_tagnum(&G__THiraDataDictLN_THiraData), -1, 1, 1, 1, 1, 0, "u 'THiraData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTHiraDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTHiraDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTHiraDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__THiraDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__THiraDataDictLN_THiraData = { "THiraData" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTHiraDataDict() {
  G__THiraDataDictLN_TClass.tagnum = -1 ;
  G__THiraDataDictLN_TBuffer.tagnum = -1 ;
  G__THiraDataDictLN_TMemberInspector.tagnum = -1 ;
  G__THiraDataDictLN_TObject.tagnum = -1 ;
  G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__THiraDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__THiraDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__THiraDataDictLN_THiraData.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTHiraDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__THiraDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__THiraDataDictLN_THiraData),sizeof(THiraData),-1,29952,"HiraData structure",G__setup_memvarTHiraData,G__setup_memfuncTHiraData);
}
extern "C" void G__cpp_setupTHiraDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTHiraDataDict()");
  G__set_cpp_environmentTHiraDataDict();
  G__cpp_setup_tagtableTHiraDataDict();

  G__cpp_setup_inheritanceTHiraDataDict();

  G__cpp_setup_typetableTHiraDataDict();

  G__cpp_setup_memvarTHiraDataDict();

  G__cpp_setup_memfuncTHiraDataDict();
  G__cpp_setup_globalTHiraDataDict();
  G__cpp_setup_funcTHiraDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTHiraDataDict();
  return;
}
class G__cpp_setup_initTHiraDataDict {
  public:
    G__cpp_setup_initTHiraDataDict() { G__add_setup_func("THiraDataDict",(G__incsetup)(&G__cpp_setupTHiraDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTHiraDataDict() { G__remove_setup_func("THiraDataDict"); }
};
G__cpp_setup_initTHiraDataDict G__cpp_setup_initializerTHiraDataDict;

