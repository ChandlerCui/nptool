//
// File generated by rootcint at Tue Dec  4 10:29:48 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TSharcPhysicsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TSharcPhysicsDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSharcPhysics_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSharcPhysics(void *p = 0);
   static void *newArray_TSharcPhysics(Long_t size, void *p);
   static void delete_TSharcPhysics(void *p);
   static void deleteArray_TSharcPhysics(void *p);
   static void destruct_TSharcPhysics(void *p);
   static void streamer_TSharcPhysics(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSharcPhysics*)
   {
      ::TSharcPhysics *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSharcPhysics >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSharcPhysics", ::TSharcPhysics::Class_Version(), "./TSharcPhysics.h", 40,
                  typeid(::TSharcPhysics), DefineBehavior(ptr, ptr),
                  &::TSharcPhysics::Dictionary, isa_proxy, 0,
                  sizeof(::TSharcPhysics) );
      instance.SetNew(&new_TSharcPhysics);
      instance.SetNewArray(&newArray_TSharcPhysics);
      instance.SetDelete(&delete_TSharcPhysics);
      instance.SetDeleteArray(&deleteArray_TSharcPhysics);
      instance.SetDestructor(&destruct_TSharcPhysics);
      instance.SetStreamerFunc(&streamer_TSharcPhysics);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSharcPhysics*)
   {
      return GenerateInitInstanceLocal((::TSharcPhysics*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSharcPhysics*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSharcPhysics::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSharcPhysics::Class_Name()
{
   return "TSharcPhysics";
}

//______________________________________________________________________________
const char *TSharcPhysics::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcPhysics*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSharcPhysics::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcPhysics*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSharcPhysics::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcPhysics*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSharcPhysics::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcPhysics*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSharcPhysics::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSharcPhysics.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> EventMultiplicity;
      {
         vector<int> &R__stl =  EventType;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  DetectorNumber;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  Strip_E;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  Strip_T;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  StripFront_E;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  StripFront_T;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  StripBack_E;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  StripBack_T;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  Strip_Front;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<int> &R__stl =  Strip_Back;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  PAD_E;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<double> &R__stl =  PAD_T;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TSharcPhysics::IsA());
   } else {
      R__c = R__b.WriteVersion(TSharcPhysics::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << EventMultiplicity;
      {
         vector<int> &R__stl =  EventType;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  DetectorNumber;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  Strip_E;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  Strip_T;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  StripFront_E;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  StripFront_T;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  StripBack_E;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  StripBack_T;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  Strip_Front;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<int> &R__stl =  Strip_Back;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<int>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  PAD_E;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<double> &R__stl =  PAD_T;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<double>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TSharcPhysics::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSharcPhysics.
      TClass *R__cl = ::TSharcPhysics::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventMultiplicity", &EventMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EventType", (void*)&EventType);
      R__insp.InspectMember("vector<int>", (void*)&EventType, "EventType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DetectorNumber", (void*)&DetectorNumber);
      R__insp.InspectMember("vector<int>", (void*)&DetectorNumber, "DetectorNumber.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_E", (void*)&Strip_E);
      R__insp.InspectMember("vector<double>", (void*)&Strip_E, "Strip_E.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_T", (void*)&Strip_T);
      R__insp.InspectMember("vector<double>", (void*)&Strip_T, "Strip_T.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StripFront_E", (void*)&StripFront_E);
      R__insp.InspectMember("vector<double>", (void*)&StripFront_E, "StripFront_E.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StripFront_T", (void*)&StripFront_T);
      R__insp.InspectMember("vector<double>", (void*)&StripFront_T, "StripFront_T.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StripBack_E", (void*)&StripBack_E);
      R__insp.InspectMember("vector<double>", (void*)&StripBack_E, "StripBack_E.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "StripBack_T", (void*)&StripBack_T);
      R__insp.InspectMember("vector<double>", (void*)&StripBack_T, "StripBack_T.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_Front", (void*)&Strip_Front);
      R__insp.InspectMember("vector<int>", (void*)&Strip_Front, "Strip_Front.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Strip_Back", (void*)&Strip_Back);
      R__insp.InspectMember("vector<int>", (void*)&Strip_Back, "Strip_Back.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PAD_E", (void*)&PAD_E);
      R__insp.InspectMember("vector<double>", (void*)&PAD_E, "PAD_E.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PAD_T", (void*)&PAD_T);
      R__insp.InspectMember("vector<double>", (void*)&PAD_T, "PAD_T.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Take_E_Front", &m_Take_E_Front);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_Take_T_Back", &m_Take_T_Back);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_MaximumStripMultiplicityAllowed", &m_MaximumStripMultiplicityAllowed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripEnergyMatchingSigma", &m_StripEnergyMatchingSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripEnergyMatchingNumberOfSigma", &m_StripEnergyMatchingNumberOfSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripFront_E_RAW_Threshold", &m_StripFront_E_RAW_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripFront_E_Threshold", &m_StripFront_E_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripBack_E_RAW_Threshold", &m_StripBack_E_RAW_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripBack_E_Threshold", &m_StripBack_E_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PAD_E_RAW_Threshold", &m_PAD_E_RAW_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PAD_E_Threshold", &m_PAD_E_Threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_EventData", &m_EventData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_PreTreatedData", &m_PreTreatedData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_EventPhysics", &m_EventPhysics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_FrontChannelStatus", (void*)&m_FrontChannelStatus);
      R__insp.InspectMember("map<int,vector<bool> >", (void*)&m_FrontChannelStatus, "m_FrontChannelStatus.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_BackChannelStatus", (void*)&m_BackChannelStatus);
      R__insp.InspectMember("map<int,vector<bool> >", (void*)&m_BackChannelStatus, "m_BackChannelStatus.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_PADChannelStatus", (void*)&m_PADChannelStatus);
      R__insp.InspectMember("map<int,vector<bool> >", (void*)&m_PADChannelStatus, "m_PADChannelStatus.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_NumberOfDetector", &m_NumberOfDetector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripPositionX", (void*)&m_StripPositionX);
      R__insp.InspectMember("vector<vector<vector<double> > >", (void*)&m_StripPositionX, "m_StripPositionX.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripPositionY", (void*)&m_StripPositionY);
      R__insp.InspectMember("vector<vector<vector<double> > >", (void*)&m_StripPositionY, "m_StripPositionY.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_StripPositionZ", (void*)&m_StripPositionZ);
      R__insp.InspectMember("vector<vector<vector<double> > >", (void*)&m_StripPositionZ, "m_StripPositionZ.", true);
      TObject::ShowMembers(R__insp);
      R__insp.GenericShowMembers("NPA::VDetector", ( ::NPA::VDetector *) (this ), false);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSharcPhysics(void *p) {
      return  p ? new(p) ::TSharcPhysics : new ::TSharcPhysics;
   }
   static void *newArray_TSharcPhysics(Long_t nElements, void *p) {
      return p ? new(p) ::TSharcPhysics[nElements] : new ::TSharcPhysics[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSharcPhysics(void *p) {
      delete ((::TSharcPhysics*)p);
   }
   static void deleteArray_TSharcPhysics(void *p) {
      delete [] ((::TSharcPhysics*)p);
   }
   static void destruct_TSharcPhysics(void *p) {
      typedef ::TSharcPhysics current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TSharcPhysics(TBuffer &buf, void *obj) {
      ((::TSharcPhysics*)obj)->::TSharcPhysics::Streamer(buf);
   }
} // end of namespace ROOT for class ::TSharcPhysics

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

/********************************************************
* TSharcPhysicsDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTSharcPhysicsDict();

extern "C" void G__set_cpp_environmentTSharcPhysicsDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TSharcPhysics.h");
  G__cpp_reset_tagtableTSharcPhysicsDict();
}
#include <new>
extern "C" int G__cpp_dllrevTSharcPhysicsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSharcPhysics */
static int G__TSharcPhysicsDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcPhysics* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcPhysics[n];
     } else {
       p = new((void*) gvp) TSharcPhysics[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcPhysics;
     } else {
       p = new((void*) gvp) TSharcPhysics;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2>* pobj;
         vector<TVector2> xobj = ((TSharcPhysics*) G__getstructoffset())->Match_Front_Back();
         pobj = new vector<TVector2>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSharcPhysics*) G__getstructoffset())->CheckEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->BuildOnlinePhysicalEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->ClearPreTreatedData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->PreTreat();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSharcPhysics*) G__getstructoffset())->IsValidChannel(*((const string*) G__int(libp->para[0])), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->InitializeStandardParameter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->ReadAnalysisConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->AddBoxDetector((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->AddQQQDetector((double) G__double(libp->para[0]), (double) G__double(libp->para[1])
, (double) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->SetRawDataPointer((TSharcData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSharcPhysics*) G__getstructoffset())->GetRawData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSharcPhysics*) G__getstructoffset())->GetPreTreatedData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcPhysics*) G__getstructoffset())->GetStripPositionX((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcPhysics*) G__getstructoffset())->GetStripPositionY((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcPhysics*) G__getstructoffset())->GetStripPositionZ((const int) G__int(libp->para[0]), (const int) G__int(libp->para[1])
, (const int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcPhysics*) G__getstructoffset())->GetNumberOfDetector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSharcPhysics*) G__getstructoffset())->GetEventMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TSharcPhysics*) G__getstructoffset())->GetPositionOfInteraction((const int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const TSharcPhysics*) G__getstructoffset())->GetDetectorNormal((const int) G__int(libp->para[0]));
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSharcPhysics::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcPhysics::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSharcPhysics::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSharcPhysics::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcPhysics*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcPhysics::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcPhysics::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcPhysics::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcPhysicsDict_471_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcPhysics::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TSharcPhysicsDict_471_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSharcPhysics* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSharcPhysics(*(TSharcPhysics*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSharcPhysics G__TTSharcPhysics;
static int G__TSharcPhysicsDict_471_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSharcPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSharcPhysics*) (soff+(sizeof(TSharcPhysics)*i)))->~G__TTSharcPhysics();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSharcPhysics*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSharcPhysics*) (soff))->~G__TTSharcPhysics();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TSharcPhysicsDict_471_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcPhysics* dest = (TSharcPhysics*) G__getstructoffset();
   *dest = *(TSharcPhysics*) libp->para[0].ref;
   const TSharcPhysics& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSharcPhysics */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTSharcPhysicsDict {
 public:
  G__Sizep2memfuncTSharcPhysicsDict(): p(&G__Sizep2memfuncTSharcPhysicsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTSharcPhysicsDict::*p)();
};

size_t G__get_sizep2memfuncTSharcPhysicsDict()
{
  G__Sizep2memfuncTSharcPhysicsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTSharcPhysicsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics))) {
     TSharcPhysics *G__Lderived;
     G__Lderived=(TSharcPhysics*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics),G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       NPA::VDetector *G__Lpbase=(NPA::VDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics),G__get_linked_tagnum(&G__TSharcPhysicsDictLN_NPAcLcLVDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTSharcPhysicsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<double,allocator<double> >,less<string> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,string,less<string> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector2>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<bool> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<bool,allocator<bool> > >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<bool,allocator<bool> >,less<int> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double> > >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > >",117,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSharcPhysics */
static void G__setup_memvarTSharcPhysics(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics));
   { TSharcPhysics *p; p=(TSharcPhysics*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->EventMultiplicity)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"EventMultiplicity=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->EventType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"EventType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->DetectorNumber)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"DetectorNumber=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Strip_E)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Strip_E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Strip_T)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"Strip_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StripFront_E)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"StripFront_E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StripFront_T)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"StripFront_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StripBack_E)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"StripBack_E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->StripBack_T)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"StripBack_T=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Strip_Front)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_Front=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Strip_Back)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,1,"Strip_Back=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PAD_E)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PAD_E=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->PAD_T)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,1,"PAD_T=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"m_Take_E_Front=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"m_Take_T_Back=",0,"!");
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"m_MaximumStripMultiplicityAllowed=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripEnergyMatchingSigma=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripEnergyMatchingNumberOfSigma=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripFront_E_RAW_Threshold=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripFront_E_Threshold=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripBack_E_RAW_Threshold=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_StripBack_E_Threshold=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_PAD_E_RAW_Threshold=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"m_PAD_E_Threshold=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcData),-1,-1,4,"m_EventData=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcData),-1,-1,4,"m_PreTreatedData=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics),-1,-1,4,"m_EventPhysics=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<bool> >"),-1,4,"m_FrontChannelStatus=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<bool> >"),-1,4,"m_BackChannelStatus=",0,"! ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<bool> >"),-1,4,"m_PADChannelStatus=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"m_NumberOfDetector=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<double> > >"),-1,4,"m_StripPositionX=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<double> > >"),-1,4,"m_StripPositionY=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("vector<vector<vector<double> > >"),-1,4,"m_StripPositionZ=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTSharcPhysicsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSharcPhysics(void) {
   /* TSharcPhysics */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics));
   G__memfunc_setup("TSharcPhysics",1320,G__TSharcPhysicsDict_471_0_1, 105, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TSharcPhysicsDict_471_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Match_Front_Back",1573,G__TSharcPhysicsDict_471_0_4, 117, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), G__defined_typename("vector<TVector2>"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckEvent",992,G__TSharcPhysicsDict_471_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadConfiguration",1748,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddParameterToCalibrationManager",3216,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootInputRaw",2288,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootInputPhysics",2729,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("InitializeRootOutput",2119,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildPhysicalEvent",1839,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildSimplePhysicalEvent",2457,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("BuildOnlinePhysicalEvent",2452,G__TSharcPhysicsDict_471_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEventPhysics",1740,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearEventData",1379,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ClearPreTreatedData",1873,G__TSharcPhysicsDict_471_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PreTreat",807,G__TSharcPhysicsDict_471_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValidChannel",1381,G__TSharcPhysicsDict_471_0_18, 103, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 10 - DetectorType i - - 10 - telescope "
"i - - 10 - channel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitializeStandardParameter",2788,G__TSharcPhysicsDict_471_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAnalysisConfig",1814,G__TSharcPhysicsDict_471_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddBoxDetector",1388,G__TSharcPhysicsDict_471_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddQQQDetector",1334,G__TSharcPhysicsDict_471_0_22, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - - 0 - R d - - 0 - Phi "
"d - - 0 - Z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRawDataPointer",1713,G__TSharcPhysicsDict_471_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSharcData' - 0 - rawDataPointer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRawData",964,G__TSharcPhysicsDict_471_0_24, 85, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreTreatedData",1674,G__TSharcPhysicsDict_471_0_25, 85, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcData), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPositionX",1759,G__TSharcPhysicsDict_471_0_26, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 10 - N i - - 10 - Front "
"i - - 10 - Back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPositionY",1760,G__TSharcPhysicsDict_471_0_27, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 10 - N i - - 10 - Front "
"i - - 10 - Back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripPositionZ",1761,G__TSharcPhysicsDict_471_0_28, 100, -1, -1, 0, 3, 1, 1, 8, 
"i - - 10 - N i - - 10 - Front "
"i - - 10 - Back", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumberOfDetector",1912,G__TSharcPhysicsDict_471_0_29, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventMultiplicity",2091,G__TSharcPhysicsDict_471_0_30, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPositionOfInteraction",2474,G__TSharcPhysicsDict_471_0_31, 117, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetectorNormal",1731,G__TSharcPhysicsDict_471_0_32, 117, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TVector3), -1, 0, 1, 1, 1, 8, "i - - 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TSharcPhysicsDict_471_0_33, 85, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSharcPhysics::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TSharcPhysicsDict_471_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcPhysics::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TSharcPhysicsDict_471_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSharcPhysics::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TSharcPhysicsDict_471_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSharcPhysics::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TSharcPhysicsDict_471_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TSharcPhysicsDict_471_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcPhysics::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TSharcPhysicsDict_471_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcPhysics::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TSharcPhysicsDict_471_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcPhysics::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TSharcPhysicsDict_471_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcPhysics::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSharcPhysics", 1320, G__TSharcPhysicsDict_471_0_45, (int) ('i'), G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics), -1, 0, 1, 1, 1, 0, "u 'TSharcPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSharcPhysics", 1446, G__TSharcPhysicsDict_471_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TSharcPhysicsDict_471_0_47, (int) ('u'), G__get_linked_tagnum(&G__TSharcPhysicsDictLN_TSharcPhysics), -1, 1, 1, 1, 1, 0, "u 'TSharcPhysics' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTSharcPhysicsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTSharcPhysicsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTSharcPhysicsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TSharcPhysicsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TSharcData = { "TSharcData" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR = { "map<string,vector<double,allocator<double> >,less<string>,allocator<pair<const string,vector<double,allocator<double> > > > >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "map<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_NPA = { "NPA" , 110 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_NPAcLcLVDetector = { "NPA::VDetector" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_TSharcPhysics = { "TSharcPhysics" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR = { "vector<TVector2,allocator<TVector2> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector2,allocator<TVector2> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR = { "map<int,vector<bool,allocator<bool> >,less<int>,allocator<pair<const int,vector<bool,allocator<bool> > > > >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR = { "vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >" , 99 , -1 };
G__linked_taginfo G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >,allocator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > > > >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTSharcPhysicsDict() {
  G__TSharcPhysicsDictLN_TClass.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TBuffer.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMemberInspector.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TObject.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_string.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TSharcData.tagnum = -1 ;
  G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_NPA.tagnum = -1 ;
  G__TSharcPhysicsDictLN_NPAcLcLVDetector.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TVector3.tagnum = -1 ;
  G__TSharcPhysicsDictLN_TSharcPhysics.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTSharcPhysicsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_string);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TSharcData);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_maplEstringcOvectorlEdoublecOallocatorlEdoublegRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_maplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_NPA);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_NPAcLcLVDetector);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_TSharcPhysics),sizeof(TSharcPhysics),-1,29952,"SharcPhysics structure",G__setup_memvarTSharcPhysics,G__setup_memfuncTSharcPhysics);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_maplEintcOvectorlEboolcOallocatorlEboolgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEboolcOallocatorlEboolgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_vectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcPhysicsDictLN_reverse_iteratorlEvectorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcOallocatorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRsPgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setupTSharcPhysicsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTSharcPhysicsDict()");
  G__set_cpp_environmentTSharcPhysicsDict();
  G__cpp_setup_tagtableTSharcPhysicsDict();

  G__cpp_setup_inheritanceTSharcPhysicsDict();

  G__cpp_setup_typetableTSharcPhysicsDict();

  G__cpp_setup_memvarTSharcPhysicsDict();

  G__cpp_setup_memfuncTSharcPhysicsDict();
  G__cpp_setup_globalTSharcPhysicsDict();
  G__cpp_setup_funcTSharcPhysicsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTSharcPhysicsDict();
  return;
}
class G__cpp_setup_initTSharcPhysicsDict {
  public:
    G__cpp_setup_initTSharcPhysicsDict() { G__add_setup_func("TSharcPhysicsDict",(G__incsetup)(&G__cpp_setupTSharcPhysicsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTSharcPhysicsDict() { G__remove_setup_func("TSharcPhysicsDict"); }
};
G__cpp_setup_initTSharcPhysicsDict G__cpp_setup_initializerTSharcPhysicsDict;

