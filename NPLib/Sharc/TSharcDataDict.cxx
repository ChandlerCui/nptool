//
// File generated by rootcint at Tue Dec  4 15:45:21 2012

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME TSharcDataDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TSharcDataDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSharcData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSharcData(void *p = 0);
   static void *newArray_TSharcData(Long_t size, void *p);
   static void delete_TSharcData(void *p);
   static void deleteArray_TSharcData(void *p);
   static void destruct_TSharcData(void *p);
   static void streamer_TSharcData(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSharcData*)
   {
      ::TSharcData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSharcData >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSharcData", ::TSharcData::Class_Version(), "./TSharcData.h", 36,
                  typeid(::TSharcData), DefineBehavior(ptr, ptr),
                  &::TSharcData::Dictionary, isa_proxy, 0,
                  sizeof(::TSharcData) );
      instance.SetNew(&new_TSharcData);
      instance.SetNewArray(&newArray_TSharcData);
      instance.SetDelete(&delete_TSharcData);
      instance.SetDeleteArray(&deleteArray_TSharcData);
      instance.SetDestructor(&destruct_TSharcData);
      instance.SetStreamerFunc(&streamer_TSharcData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSharcData*)
   {
      return GenerateInitInstanceLocal((::TSharcData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSharcData*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSharcData::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSharcData::Class_Name()
{
   return "TSharcData";
}

//______________________________________________________________________________
const char *TSharcData::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcData*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSharcData::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSharcData*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSharcData::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcData*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSharcData::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSharcData*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSharcData::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSharcData.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  fSharc_StripFront_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripFront_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripFront_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripFront_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripBack_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripBack_StripNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripBack_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripBack_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_PAD_DetectorNbr;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            unsigned short R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_PAD_Energy;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_PAD_Time;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            double R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, TSharcData::IsA());
   } else {
      R__c = R__b.WriteVersion(TSharcData::IsA(), kTRUE);
      TObject::Streamer(R__b);
      {
         vector<UShort_t> &R__stl =  fSharc_StripFront_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripFront_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripFront_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripFront_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripBack_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_StripBack_StripNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripBack_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_StripBack_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<UShort_t> &R__stl =  fSharc_PAD_DetectorNbr;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<UShort_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_PAD_Energy;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      {
         vector<Double_t> &R__stl =  fSharc_PAD_Time;
         int R__n=(&R__stl) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Double_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void TSharcData::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSharcData.
      TClass *R__cl = ::TSharcData::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripFront_DetectorNbr", (void*)&fSharc_StripFront_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fSharc_StripFront_DetectorNbr, "fSharc_StripFront_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripFront_StripNbr", (void*)&fSharc_StripFront_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fSharc_StripFront_StripNbr, "fSharc_StripFront_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripFront_Energy", (void*)&fSharc_StripFront_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_StripFront_Energy, "fSharc_StripFront_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripFront_Time", (void*)&fSharc_StripFront_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_StripFront_Time, "fSharc_StripFront_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripBack_DetectorNbr", (void*)&fSharc_StripBack_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fSharc_StripBack_DetectorNbr, "fSharc_StripBack_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripBack_StripNbr", (void*)&fSharc_StripBack_StripNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fSharc_StripBack_StripNbr, "fSharc_StripBack_StripNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripBack_Energy", (void*)&fSharc_StripBack_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_StripBack_Energy, "fSharc_StripBack_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_StripBack_Time", (void*)&fSharc_StripBack_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_StripBack_Time, "fSharc_StripBack_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_PAD_DetectorNbr", (void*)&fSharc_PAD_DetectorNbr);
      R__insp.InspectMember("vector<UShort_t>", (void*)&fSharc_PAD_DetectorNbr, "fSharc_PAD_DetectorNbr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_PAD_Energy", (void*)&fSharc_PAD_Energy);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_PAD_Energy, "fSharc_PAD_Energy.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSharc_PAD_Time", (void*)&fSharc_PAD_Time);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSharc_PAD_Time, "fSharc_PAD_Time.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "m_FSPC2Detector", (void*)&m_FSPC2Detector);
      R__insp.InspectMember("map<int,vector<int> >", (void*)&m_FSPC2Detector, "m_FSPC2Detector.", true);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSharcData(void *p) {
      return  p ? new(p) ::TSharcData : new ::TSharcData;
   }
   static void *newArray_TSharcData(Long_t nElements, void *p) {
      return p ? new(p) ::TSharcData[nElements] : new ::TSharcData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSharcData(void *p) {
      delete ((::TSharcData*)p);
   }
   static void deleteArray_TSharcData(void *p) {
      delete [] ((::TSharcData*)p);
   }
   static void destruct_TSharcData(void *p) {
      typedef ::TSharcData current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_TSharcData(TBuffer &buf, void *obj) {
      ((::TSharcData*)obj)->::TSharcData::Streamer(buf);
   }
} // end of namespace ROOT for class ::TSharcData

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* TSharcDataDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTSharcDataDict();

extern "C" void G__set_cpp_environmentTSharcDataDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("TSharcData.h");
  G__cpp_reset_tagtableTSharcDataDict();
}
#include <new>
extern "C" int G__cpp_dllrevTSharcDataDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSharcData */
static int G__TSharcDataDict_451_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcData* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcData[n];
     } else {
       p = new((void*) gvp) TSharcData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSharcData;
     } else {
       p = new((void*) gvp) TSharcData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetFront_DetectorNbr((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetFront_StripNbr((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetFront_Energy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetFront_Time((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetBack_DetectorNbr((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetBack_StripNbr((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetBack_Energy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetBack_Time((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetPAD_DetectorNbr((UShort_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetPAD_Energy((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->SetPAD_Time((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSharcData*) G__getstructoffset())->GetFront_DetectorNbr((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSharcData*) G__getstructoffset())->GetFront_StripNbr((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetFront_Energy((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetFront_Time((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSharcData*) G__getstructoffset())->GetBack_DetectorNbr((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSharcData*) G__getstructoffset())->GetBack_StripNbr((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetBack_Energy((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetBack_Time((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSharcData*) G__getstructoffset())->GetPAD_DetectorNbr((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetPAD_Energy((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSharcData*) G__getstructoffset())->GetPAD_Time((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSharcData*) G__getstructoffset())->GetMultiplicityFront());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSharcData*) G__getstructoffset())->GetMultiplicityBack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSharcData*) G__getstructoffset())->GetMultiplicityPAD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->ReadFSPCFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillData((TTigEventFragment*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillBoxFront((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillBoxBack1((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillBoxBack2((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillQQQFront((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillQQQBack((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->FillPAD((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (TTigEventFragment*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,vector<int> >* pobj;
         const map<int,vector<int> > xobj = ((const TSharcData*) G__getstructoffset())->GetFSPC2Detector();
         pobj = new map<int,vector<int> >(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSharcData::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcData::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSharcData::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSharcData::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSharcData*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcData::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcData::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSharcData::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TSharcDataDict_451_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSharcData::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TSharcDataDict_451_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSharcData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSharcData(*(TSharcData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSharcData G__TTSharcData;
static int G__TSharcDataDict_451_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSharcData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSharcData*) (soff+(sizeof(TSharcData)*i)))->~G__TTSharcData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSharcData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSharcData*) (soff))->~G__TTSharcData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TSharcDataDict_451_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSharcData* dest = (TSharcData*) G__getstructoffset();
   *dest = *(TSharcData*) libp->para[0].ref;
   const TSharcData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSharcData */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTSharcDataDict {
 public:
  G__Sizep2memfuncTSharcDataDict(): p(&G__Sizep2memfuncTSharcDataDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTSharcDataDict::*p)();
};

size_t G__get_sizep2memfuncTSharcDataDict()
{
  G__Sizep2memfuncTSharcDataDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTSharcDataDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData))) {
     TSharcData *G__Lderived;
     G__Lderived=(TSharcData*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData),G__get_linked_tagnum(&G__TSharcDataDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTSharcDataDict() {

   /* Setting up typedef entry */
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TH1F>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UShort_t>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int> >",117,G__get_linked_tagnum(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<int,allocator<int> >,less<int> >",117,G__get_linked_tagnum(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSharcData */
static void G__setup_memvarTSharcData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData));
   { TSharcData *p; p=(TSharcData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fSharc_StripFront_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fSharc_StripFront_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_StripFront_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_StripFront_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fSharc_StripBack_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fSharc_StripBack_StripNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_StripBack_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_StripBack_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<UShort_t>"),-1,4,"fSharc_PAD_DetectorNbr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_PAD_Energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSharc_PAD_Time=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,vector<int> >"),-1,4,"m_FSPC2Detector=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TSharcDataDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTSharcDataDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSharcData(void) {
   /* TSharcData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData));
   G__memfunc_setup("TSharcData",959,G__TSharcDataDict_451_0_1, 105, G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__TSharcDataDict_451_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Dump",406,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFront_DetectorNbr",2032,G__TSharcDataDict_451_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFront_StripNbr",1736,G__TSharcDataDict_451_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFront_Energy",1534,G__TSharcDataDict_451_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFront_Time",1315,G__TSharcDataDict_451_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBack_DetectorNbr",1880,G__TSharcDataDict_451_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBack_StripNbr",1584,G__TSharcDataDict_451_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - StripNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBack_Energy",1382,G__TSharcDataDict_451_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBack_Time",1163,G__TSharcDataDict_451_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPAD_DetectorNbr",1724,G__TSharcDataDict_451_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "r - 'UShort_t' 0 - DetNbr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPAD_Energy",1226,G__TSharcDataDict_451_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Energy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPAD_Time",1007,G__TSharcDataDict_451_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - Time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFront_DetectorNbr",2020,G__TSharcDataDict_451_0_16, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetFront_StripNbr",1724,G__TSharcDataDict_451_0_17, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetFront_Energy",1522,G__TSharcDataDict_451_0_18, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetFront_Time",1303,G__TSharcDataDict_451_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetBack_DetectorNbr",1868,G__TSharcDataDict_451_0_20, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetBack_StripNbr",1572,G__TSharcDataDict_451_0_21, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetBack_Energy",1370,G__TSharcDataDict_451_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetBack_Time",1151,G__TSharcDataDict_451_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetPAD_DetectorNbr",1712,G__TSharcDataDict_451_0_24, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetPAD_Energy",1214,G__TSharcDataDict_451_0_25, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetPAD_Time",995,G__TSharcDataDict_451_0_26, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - - 0 - i", "!", (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicityFront",2098,G__TSharcDataDict_451_0_27, 104, -1, -1, 0, 0, 1, 1, 8, "", "!", (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicityBack",1946,G__TSharcDataDict_451_0_28, 104, -1, -1, 0, 0, 1, 1, 8, "", "!", (void*) NULL, 0);
   G__memfunc_setup("GetMultiplicityPAD",1790,G__TSharcDataDict_451_0_29, 104, -1, -1, 0, 0, 1, 1, 8, "", "!", (void*) NULL, 0);
   G__memfunc_setup("ReadFSPCFile",1064,G__TSharcDataDict_451_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - FSPCPath", "!", (void*) NULL, 0);
   G__memfunc_setup("FillData",769,G__TSharcDataDict_451_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillBoxFront",1209,G__TSharcDataDict_451_0_32, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillBoxBack1",1106,G__TSharcDataDict_451_0_33, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillBoxBack2",1107,G__TSharcDataDict_451_0_34, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillQQQFront",1155,G__TSharcDataDict_451_0_35, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillQQQBack",1003,G__TSharcDataDict_451_0_36, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("FillPAD",604,G__TSharcDataDict_451_0_37, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - - 0 - DetNbr i - - 0 - hit "
"U 'TTigEventFragment' - 0 - TigEvent", "!", (void*) NULL, 0);
   G__memfunc_setup("GetFSPC2Detector",1464,G__TSharcDataDict_451_0_38, 117, G__get_linked_tagnum(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR), G__defined_typename("map<int,vector<int> >"), 0, 0, 1, 1, 8, "", "!", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TSharcDataDict_451_0_39, 85, G__get_linked_tagnum(&G__TSharcDataDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSharcData::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TSharcDataDict_451_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcData::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TSharcDataDict_451_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSharcData::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TSharcDataDict_451_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSharcData::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TSharcDataDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TSharcDataDict_451_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TSharcDataDict_451_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcData::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TSharcDataDict_451_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcData::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TSharcDataDict_451_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSharcData::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TSharcDataDict_451_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSharcData::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSharcData", 959, G__TSharcDataDict_451_0_51, (int) ('i'), G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData), -1, 0, 1, 1, 1, 0, "u 'TSharcData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSharcData", 1085, G__TSharcDataDict_451_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TSharcDataDict_451_0_53, (int) ('u'), G__get_linked_tagnum(&G__TSharcDataDictLN_TSharcData), -1, 1, 1, 1, 1, 0, "u 'TSharcData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTSharcDataDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTSharcDataDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTSharcDataDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TSharcDataDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TTigEventFragment = { "TTigEventFragment" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR = { "vector<TH1F,allocator<TH1F> >" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TH1F,allocator<TH1F> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_TSharcData = { "TSharcData" , 99 , -1 };
G__linked_taginfo G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR = { "map<int,vector<int,allocator<int> >,less<int>,allocator<pair<const int,vector<int,allocator<int> > > > >" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTSharcDataDict() {
  G__TSharcDataDictLN_TClass.tagnum = -1 ;
  G__TSharcDataDictLN_TBuffer.tagnum = -1 ;
  G__TSharcDataDictLN_TMemberInspector.tagnum = -1 ;
  G__TSharcDataDictLN_TObject.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_string.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcDataDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TSharcDataDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TSharcDataDictLN_TTigEventFragment.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR.tagnum = -1 ;
  G__TSharcDataDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TSharcDataDictLN_TSharcData.tagnum = -1 ;
  G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTSharcDataDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_string);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TTigEventFragment);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_vectorlETH1FcOallocatorlETH1FgRsPgR);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_reverse_iteratorlEvectorlETH1FcOallocatorlETH1FgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_TSharcData),sizeof(TSharcData),-1,29952,"SharcData structure",G__setup_memvarTSharcData,G__setup_memfuncTSharcData);
   G__get_linked_tagnum_fwd(&G__TSharcDataDictLN_maplEintcOvectorlEintcOallocatorlEintgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgR);
}
extern "C" void G__cpp_setupTSharcDataDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTSharcDataDict()");
  G__set_cpp_environmentTSharcDataDict();
  G__cpp_setup_tagtableTSharcDataDict();

  G__cpp_setup_inheritanceTSharcDataDict();

  G__cpp_setup_typetableTSharcDataDict();

  G__cpp_setup_memvarTSharcDataDict();

  G__cpp_setup_memfuncTSharcDataDict();
  G__cpp_setup_globalTSharcDataDict();
  G__cpp_setup_funcTSharcDataDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTSharcDataDict();
  return;
}
class G__cpp_setup_initTSharcDataDict {
  public:
    G__cpp_setup_initTSharcDataDict() { G__add_setup_func("TSharcDataDict",(G__incsetup)(&G__cpp_setupTSharcDataDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTSharcDataDict() { G__remove_setup_func("TSharcDataDict"); }
};
G__cpp_setup_initTSharcDataDict G__cpp_setup_initializerTSharcDataDict;

