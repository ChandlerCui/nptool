#ifndef Analysis_h 
#define Analysis_h
/*****************************************************************************
 * Copyright (C) 2009-2014    this file is part of the NPTool Project        *
 *                                                                           *
 * For the licensing terms see $NPTOOL/Licence/NPTool_Licence                *
 * For the list of contributors see $NPTOOL/Licence/Contributors             *
 *****************************************************************************/

/*****************************************************************************
 * Original Author: Adrien MATTA  contact address: a.matta@surrey.ac.uk      *
 *                                                                           *
 * Creation Date  : march 2025                                               *
 * Last update    :                                                          *
 *---------------------------------------------------------------------------*
 * Decription:                                                               *
 * Class describing the property of an Analysis object                       *
 *                                                                           *
 *---------------------------------------------------------------------------*
 * Comment:                                                                  *
 *                                                                           *
 *                                                                           *
 *****************************************************************************/
#include"NPVAnalysis.h"
#include "TTiaraHyballPhysics.h"
#include "TTiaraBarrelPhysics.h"
#include "TInitialConditions.h"
#include "NPEnergyLoss.h"
#include "NPReaction.h"
#include <TVector3.h>
#include <TRandom3.h>
#include <TMath.h>
#include <TObject.h>




class Analysis: public NPA::VAnalysis{
  public:
    Analysis();
    ~Analysis();

  public: 
    void Init();
    void TreatEvent();
    void End();
    void ReInitValue();
    void InitOutputBranch();
    void InitInputBranch();
    static NPA::VAnalysis* Construct();

  private:

  double Ex;
  double ELab;
  double ThetaLab;
  double ThetaCM;
  double TiaraIMX;
  double TiaraIMY;
  double TiaraIMZ;
  TInitialConditions* Initial;
  NPL::Reaction* P30dpReaction;
 
  //	Energy loss table: the G4Table are generated by the simulation
  EnergyLoss proton_CD2;
  EnergyLoss proton_Al ;
  EnergyLoss proton_Si; 
  EnergyLoss P30_CD2 ; 
	
  TTiaraHyballPhysics* TH;
  TTiaraBarrelPhysics* TB;

  TRandom *Rand ;
	double ThetaNormalTarget  ;
	double ThetaTHSurface ;
  double ThetaTBSurface ;
	double Si_E_TH  ;
  double Si_E_TB  ;
	double Energy ;
	double TargetThickness ;
	
  double XTarget ;
	double YTarget ;
	TVector3 BeamDirection ;


};
#endif
